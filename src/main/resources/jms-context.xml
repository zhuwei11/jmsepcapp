<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
                 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
                 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd
            	http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd
             http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.1.xsd">

	<!-- a pooling based JMS provider -->
	<bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>${activemq.broker.url}</value>
				</property>
			</bean>
		</property>
	</bean>

	<!-- ActiveMQ destinations -->
	<amq:queue name="traderRequest" physicalName="queue.zw.trader.request" />
	<amq:queue name="traderResponse" physicalName="queue.zw.trader.response" />
	<amq:queue name="traderNotice" physicalName="queue.zw.trader.notice" />

	<!-- Spring JMS Template -->
	<bean id="jmsTemplate" class="com.zw.jmsepcapp.silkie.jms.DefaultJmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />
		<property name="eventFieldFactory" ref="eventFieldFactory" />
		<property name="deliveryMode" value="2" /> <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->
	</bean>

	<bean id="eventFieldFactory" class="com.zw.jmsepcapp.silkie.jms.DefaultEventFieldFactory">
		<property name="fieldPackageBase" value="com.zw.jmsepcapp.protocol"></property>
		<property name="eventPackageBase" value="com.zw.jmsepcapp.biz"></property>
	</bean>
	
	<bean id="dialogModeLock" class="com.zw.jmsepcapp.silkie.jms.DialogModeLock" />
	
	<bean id="epc" class="com.zw.jmsepcapp.silkie.epc.impl.ThreadPoolEpc" />

	<bean id="jmsMessageHandler" class="com.zw.jmsepcapp.silkie.jms.handler.DefaultJmsMessageHandler">
		<property name="dialogModeLock" ref="dialogModeLock"></property>
		<property name="jmsTemplate" ref="jmsTemplate" />
		<property name="epc" ref="epc"></property>
	</bean>
	
    
    <!-- 响应监听 -->
	<bean id="traderResponseListenerContainer" class="com.zw.jmsepcapp.silkie.jms.DefaultJmsMessageListenerContainer">
    	<constructor-arg ref="eventFieldFactory"/>
    	<property name="autoStartup" value="false"/>
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination" ref="traderResponse" />
        <property name="messageSelector" value="app_id=${app.id} and app_type=${app.type}" />
        <property name="taskExecutor">
			<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
				<property name="corePoolSize" value="5"></property>
			</bean>
		</property>
        <property name="jmsMessageHandler" ref="jmsMessageHandler" />
    </bean>
    
    
</beans>